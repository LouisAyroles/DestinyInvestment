# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: fwilhe2/setup-kotlin@0.2.0
      
      - name: Setup Java JDK
        uses: actions/setup-java@v2.5.0
        with:
          distribution: adopt
          java-version: 11
      
      - name: Make gradlew file executable
        run: chmod +x gradlew
      
      - name: Build application
        run: ./gradlew buildForDeployment
        
      - name: Make application executable
        run: chmod +x build/backend/bin/backend
      
      - name: Send built application to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "build/frontend,build/backend"
          target: "/tmp/destiny/"
          
      - name: Send service file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "destiny.service"
          target: "/tmp"
      
      - name: Run server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo mv /tmp/destiny /opt/destiny
            sudo mv /tmp/destiny.service /etc/systemd/system/destiny.service
            sudo systemclt restart destiny
